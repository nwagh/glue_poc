{"paragraphs":[{"title":"","text":"%pyspark\n\n## Perform Glue Imports\nimport sys\nfrom pyspark.context import SparkContext\nfrom awsglue.context import GlueContext\nfrom awsglue.transforms import *\nfrom awsglue.utils import getResolvedOptions\nfrom awsglue.dynamicframe import DynamicFrame\nfrom pyspark.sql.functions import *\n\nsc=sc if 'sc' in vars() else SparkContext()\nglueContext = GlueContext(sc)","user":"admin","dateUpdated":"2018-10-15T17:57:40+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","lineNumbers":false,"title":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1537751740005_-1521858458","id":"20180924-011540_1601783141","dateCreated":"2018-09-24T01:15:40+0000","dateStarted":"2018-10-15T17:57:41+0000","dateFinished":"2018-10-15T17:57:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5951"},{"text":"%pyspark\n\n## Read Glue Catalog into Dynamic Frames\nacctDyF = glueContext.create_dynamic_frame.from_catalog(database='banking',table_name='raw_account')\ncustDyF = glueContext.create_dynamic_frame.from_catalog(database='banking',table_name='raw_customer')\ntranDyF = glueContext.create_dynamic_frame.from_catalog(database='banking',table_name='raw_transactions')\n\n#acctDF.printSchema()\n","user":"admin","dateUpdated":"2018-10-15T17:57:44+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1537751829996_1694596374","id":"20180924-011709_1035144604","dateCreated":"2018-09-24T01:17:09+0000","dateStarted":"2018-10-15T17:57:44+0000","dateFinished":"2018-10-15T17:57:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5952"},{"text":"%pyspark\n\n## Perform Counts\n#custDF.count()\nprint (acctDyF.count())\nacctDF = acctDyF.toDF()\nprint(acctDF.count())\n#tranDF.count()","user":"admin","dateUpdated":"2018-10-15T16:39:13+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"45001386\n45001386\n"}]},"apps":[],"jobName":"paragraph_1537751992081_-1090202485","id":"20180924-011952_488668493","dateCreated":"2018-09-24T01:19:52+0000","dateStarted":"2018-10-15T16:39:13+0000","dateFinished":"2018-10-15T16:40:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5953"},{"text":"%pyspark\n\n## Perform  repartitioning to X partitions. Partitioning reduces number of output files in S3. This is expensive operation so use wisely\nsortedAcctDF = acctDyF.toDF().orderBy(desc('account_id')).repartition(10)","user":"admin","dateUpdated":"2018-10-15T16:40:23+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1537752224357_-506432779","id":"20180924-012344_1835400085","dateCreated":"2018-09-24T01:23:44+0000","dateStarted":"2018-10-15T16:40:23+0000","dateFinished":"2018-10-15T16:40:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5954"},{"text":"%pyspark\n\n## Convert from Spark Dataframe to Dynamic Frame\nacctDyF = DynamicFrame.fromDF(sortedAcctDF,glueContext,\"acctDyF\")\n\n## Convert DataTypes\nmappedDF = ApplyMapping.apply(frame = acctDyF, mappings = [(\"account_id\", \"long\", \"account_id\", \"long\"), (\"account_name\", \"string\", \"account_name\", \"string\"), (\"acct_open_date\", \"string\", \"acct_open_date\", \"timestamp\"), (\"acct_balance\", \"double\", \"acct_balance\", \"double\"), (\"customer_id\", \"long\", \"customer_id\", \"long\")], transformation_ctx = \"applymapping1\")\n","user":"admin","dateUpdated":"2018-10-15T16:41:03+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1537756042697_531322540","id":"20180924-022722_2044641476","dateCreated":"2018-09-24T02:27:22+0000","dateStarted":"2018-10-15T16:41:03+0000","dateFinished":"2018-10-15T16:41:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5955"},{"text":"%pyspark\n\n## Write to S3\nglueContext.write_dynamic_frame.from_options(frame = mappedDF, connection_type = \"s3\", connection_options = {'path': 's3://nw-glue/bank_analytics/accounts'}, format = \"parquet\", transformation_ctx = \"datasink4\")\n\n","user":"admin","dateUpdated":"2018-10-15T16:47:48+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<awsglue.dynamicframe.DynamicFrame object at 0x7fc117561fd0>\n"}]},"apps":[],"jobName":"paragraph_1537756556028_-54530731","id":"20180924-023556_1291922309","dateCreated":"2018-09-24T02:35:56+0000","dateStarted":"2018-09-27T19:41:37+0000","dateFinished":"2018-09-27T19:43:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5956"},{"text":"%pyspark\n## Order by, Repartition to x partitions\ncustDyF = DynamicFrame.fromDF(custDyF.toDF().orderBy(desc('customer_id')).repartition(5),glueContext,\"custDyF\")\n","user":"admin","dateUpdated":"2018-10-15T17:00:27+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1537756635248_-501321606","id":"20180924-023715_925757776","dateCreated":"2018-09-24T02:37:15+0000","dateStarted":"2018-09-27T19:51:32+0000","dateFinished":"2018-09-27T19:51:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5957"},{"text":"%pyspark\n#### Write to S3\nglueContext.write_dynamic_frame.from_options(frame = custDyF, connection_type = \"s3\", connection_options = {'path': 's3://nw-glue/bank_analytics/customers'}, format = \"parquet\", transformation_ctx = \"datasink5\")\n","user":"admin","dateUpdated":"2018-10-15T17:00:27+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<awsglue.dynamicframe.DynamicFrame object at 0x7fc117643690>\n"}]},"apps":[],"jobName":"paragraph_1538077681923_586460913","id":"20180927-194801_1715407039","dateCreated":"2018-09-27T19:48:01+0000","dateStarted":"2018-09-27T19:52:48+0000","dateFinished":"2018-09-27T19:53:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5958"},{"text":"%pyspark\n## Read from S3 Subset of data\ntranDyF = glueContext.create_dynamic_frame.from_options(connection_type='s3',connection_options = {\"paths\": [ \"s3://<bucket>/transactions.1.csv\"]}, format=\"csv\")\n","user":"admin","dateUpdated":"2018-10-15T17:57:59+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1538423386837_1048786803","id":"20181001-194946_1450460717","dateCreated":"2018-10-01T19:49:46+0000","dateStarted":"2018-10-15T17:57:59+0000","dateFinished":"2018-10-15T17:57:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5959"},{"text":"%pyspark\n\n## Print Schema. Notice that headers are auto assigned\ntranDyF.printSchema()","user":"admin","dateUpdated":"2018-10-15T17:58:02+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n|-- col0: string\n|-- col1: string\n|-- col2: string\n|-- col3: string\n|-- col4: string\n\n"}]},"apps":[],"jobName":"paragraph_1538167638598_-1703106233","id":"20180928-204718_618308410","dateCreated":"2018-09-28T20:47:18+0000","dateStarted":"2018-10-15T17:58:02+0000","dateFinished":"2018-10-15T17:58:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5960"},{"text":"%pyspark\n\n## Convert to Spark Dataframe\ntranDF = tranDyF.toDF()","user":"admin","dateUpdated":"2018-10-15T17:58:33+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1538077968004_-599505408","id":"20180927-195248_954819757","dateCreated":"2018-09-27T19:52:48+0000","dateStarted":"2018-10-15T17:58:33+0000","dateFinished":"2018-10-15T17:58:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5961"},{"text":"%pyspark\n\n## Print First few records\ntranDF.head(5)","user":"admin","dateUpdated":"2018-10-15T17:58:48+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[Row(col0=u'100', col1=u'10000', col2=u'D', col3=u'2010-03-08 16:12:00', col4=u'64682.11'), Row(col0=u'101', col1=u'10000', col2=u'L', col3=u'2010-10-02 08:44:59', col4=u'43049.06'), Row(col0=u'102', col1=u'10000', col2=u'L', col3=u'2012-08-27 21:50:49', col4=u'71171.08'), Row(col0=u'103', col1=u'10000', col2=u'C', col3=u'2017-01-24 22:03:22', col4=u'7496.13'), Row(col0=u'104', col1=u'10000', col2=u'C', col3=u'2017-11-19 02:43:37', col4=u'61486.40')]\n"}]},"apps":[],"jobName":"paragraph_1538267925845_1302467495","id":"20180930-003845_617245282","dateCreated":"2018-09-30T00:38:45+0000","dateStarted":"2018-10-15T17:58:48+0000","dateFinished":"2018-10-15T17:58:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5962"},{"text":"%pyspark\n\n## Create UDF(User Defined Function) to parse Timestamp\nfrom dateutil import parser\nfrom pyspark.sql.types import IntegerType,StringType,ArrayType\n\ndef parse_date_udf(x):\n    print(\"Input is: {}\".format(x))\n    dt = parser.parse(x)\n    return [dt.year,dt.month,dt.day]\n    \nprint (parse_date_udf(\"2010-10-02 08:44:59\")[0]) \n\nparse_date_udf = udf(parse_date_udf,ArrayType(IntegerType()))\n\n","user":"admin","dateUpdated":"2018-10-15T17:58:52+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Input is: 2010-10-02 08:44:59\n2010\n"}]},"apps":[],"jobName":"paragraph_1538270023773_-694312313","id":"20180930-011343_650935433","dateCreated":"2018-09-30T01:13:43+0000","dateStarted":"2018-10-15T17:58:52+0000","dateFinished":"2018-10-15T17:58:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5963"},{"text":"%pyspark\n\n## Add new columns using UDF\ntranDF = tranDF.withColumn(\"Year\", parse_date_udf(tranDF[\"col3\"])[0])\\\n    .withColumn('Month',parse_date_udf(tranDF[\"col3\"])[1])\\\n    .withColumn('Day',parse_date_udf(tranDF[\"col3\"])[2])\n    \n    ","user":"admin","dateUpdated":"2018-10-15T17:58:55+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1538270494783_-958548320","id":"20180930-012134_842219401","dateCreated":"2018-09-30T01:21:34+0000","dateStarted":"2018-10-15T17:58:55+0000","dateFinished":"2018-10-15T17:58:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5964"},{"text":"%pyspark\n## Print few rows \ntranDF.head(5)","user":"admin","dateUpdated":"2018-10-15T17:59:01+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[Row(col0=u'100', col1=u'10000', col2=u'D', col3=u'2010-03-08 16:12:00', col4=u'64682.11', Year=2010, Month=3, Day=8), Row(col0=u'101', col1=u'10000', col2=u'L', col3=u'2010-10-02 08:44:59', col4=u'43049.06', Year=2010, Month=10, Day=2), Row(col0=u'102', col1=u'10000', col2=u'L', col3=u'2012-08-27 21:50:49', col4=u'71171.08', Year=2012, Month=8, Day=27), Row(col0=u'103', col1=u'10000', col2=u'C', col3=u'2017-01-24 22:03:22', col4=u'7496.13', Year=2017, Month=1, Day=24), Row(col0=u'104', col1=u'10000', col2=u'C', col3=u'2017-11-19 02:43:37', col4=u'61486.40', Year=2017, Month=11, Day=19)]\n"}]},"apps":[],"jobName":"paragraph_1538271501881_226674741","id":"20180930-013821_1531584200","dateCreated":"2018-09-30T01:38:21+0000","dateStarted":"2018-10-15T17:59:01+0000","dateFinished":"2018-10-15T18:10:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5965"},{"text":"%pyspark\n## Convert Dataframe to Dynamic Frame\ntranDyF = DynamicFrame.fromDF(tranDF,glueContext,\"tranDyF\")\n\n## Convert DataType for Timestamp\nmappedTranDyF = ApplyMapping.apply(frame = tranDyF, mappings = [(\"tran_id\", \"long\", \"tran_id\", \"long\"), (\"acct_id\", \"long\", \"acct_id\", \"long\"), (\"tran_code\", \"string\", \"tran_code\", \"string\"), (\"tran_date\", \"string\", \"tran_date\", \"timestamp\"), (\"tran_amount\", \"double\", \"tran_amount\", \"double\"), (\"Year\",\"Integer\",\"Year\",\"Integer\"),(\"Month\",\"Integer\",\"Month\",\"Integer\"),(\"Day\",\"Integer\",\"Day\",\"Integer\")], transformation_ctx = \"applymapping1\")\n\n","user":"admin","dateUpdated":"2018-10-15T18:13:36+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1538412231226_-1909185388","id":"20181001-164351_1406098034","dateCreated":"2018-10-01T16:43:51+0000","dateStarted":"2018-10-15T18:13:36+0000","dateFinished":"2018-10-15T18:13:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5966"},{"text":"%pyspark\n## Order By columns\ntranDF = tranDF.orderBy(asc('Year'))","user":"admin","dateUpdated":"2018-10-15T18:49:44+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1538421519873_1413859911","id":"20181001-191839_963483912","dateCreated":"2018-10-01T19:18:39+0000","dateStarted":"2018-10-15T18:49:44+0000","dateFinished":"2018-10-15T18:49:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5967"},{"text":"%pyspark\n\n## Repartition Dataset by Year Column\ntranDF = tranDF.repartition('Year')\n","user":"admin","dateUpdated":"2018-10-15T18:49:46+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1538426232870_1714290197","id":"20181001-203712_1702759749","dateCreated":"2018-10-01T20:37:12+0000","dateStarted":"2018-10-15T18:49:46+0000","dateFinished":"2018-10-15T18:49:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5968"},{"text":"%pyspark\n\n## Convert Dataframe to Dynamic Frame\ntranDyF = DynamicFrame.fromDF(tranDF,glueContext,\"tranDyF\")\n\n## Write to S3 bucket with partitions\nglueContext.write_dynamic_frame.from_options(frame = tranDyF, connection_type = \"s3\", connection_options={ \"path\": \"s3://nw-glue/bank_analytics/transactions/\", \"partitionKeys\": [\"Year\"]}, format=\"parquet\")","user":"admin","dateUpdated":"2018-10-01T22:20:18+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<awsglue.dynamicframe.DynamicFrame object at 0x7fc1174f1a10>\n"}]},"apps":[],"jobName":"paragraph_1538413081402_-1222418992","id":"20181001-165801_1628925608","dateCreated":"2018-10-01T16:58:01+0000","dateStarted":"2018-10-01T22:20:18+0000","dateFinished":"2018-10-01T22:33:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5969"},{"text":"%pyspark\n","user":"admin","dateUpdated":"2018-10-01T21:09:53+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1538428193275_-1265969326","id":"20181001-210953_358816388","dateCreated":"2018-10-01T21:09:53+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:5970"}],"name":"Raw_To_Optimize","id":"2DSQBJGET","angularObjects":{"2CRE5X63N:shared_process":[],"2CQZ9JC8F:shared_process":[],"2CNAPD13W:shared_process":[],"2CRC324G8:existing_process":[],"2CQ1X8PFU:shared_process":[],"2CNFC7TNE:shared_process":[],"2CMQ2EHTE:shared_process":[],"2CQUCJVJA:shared_process":[],"2CQY3SUDK:shared_process":[],"2CNA37GFQ:shared_process":[],"2CPH9H73W:shared_process":[],"2CR2XFEE3:shared_process":[],"2CQ9YVF7W:shared_process":[],"2CP1P36EU:shared_process":[],"2CMR9MKCE:shared_process":[],"2CR2YZBFW:shared_process":[],"2CPJK4U6W:shared_process":[],"2CR2Z9UR2:shared_process":[],"2CPQWHWM3:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}
